{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "MaxSupply",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintPriceNotPaid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NonExistentTokenURI",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WithdrawTransfer",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MINT_PRICE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TOTAL_SUPPLY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentTokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "mintTo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "withdrawPayments",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040516200181138038062001811833981016040819052620000349162000198565b3383836000620000458382620002b8565b506001620000548282620002b8565b50505062000068816200008160201b60201c565b506007620000778282620002b8565b5050505062000384565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000fb57600080fd5b81516001600160401b0380821115620001185762000118620000d3565b604051601f8301601f19908116603f01168101908282118183101715620001435762000143620000d3565b816040528381526020925086838588010111156200016057600080fd5b600091505b8382101562000184578582018301518183018401529082019062000165565b600093810190920192909252949350505050565b600080600060608486031215620001ae57600080fd5b83516001600160401b0380821115620001c657600080fd5b620001d487838801620000e9565b94506020860151915080821115620001eb57600080fd5b620001f987838801620000e9565b935060408601519150808211156200021057600080fd5b506200021f86828701620000e9565b9150509250925092565b600181811c908216806200023e57607f821691505b6020821081036200025f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002b357600081815260208120601f850160051c810160208610156200028e5750805b601f850160051c820191505b81811015620002af578281556001016200029a565b5050505b505050565b81516001600160401b03811115620002d457620002d4620000d3565b620002ec81620002e5845462000229565b8462000265565b602080601f8311600181146200032457600084156200030b5750858301515b600019600386901b1c1916600185901b178555620002af565b600085815260208120601f198616915b82811015620003555788860151825594840194600190910190840162000334565b5085821015620003745787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61147d80620003946000396000f3fe6080604052600436106101345760003560e01c8063715018a6116100ab578063a22cb4651161006f578063a22cb4651461034a578063b88d4fde1461036a578063c002d23d1461038a578063c87b56dd146103a6578063e985e9c5146103c6578063f2fde38b1461040157600080fd5b8063715018a6146102d9578063755edd17146102ee5780638da5cb5b14610301578063902d55a51461031f57806395d89b411461033557600080fd5b806323b872dd116100fd57806323b872dd1461022457806331b3eb941461024457806342842e0e146102645780636352211e146102845780636c0360eb146102a457806370a08231146102b957600080fd5b80629a9b7b1461013957806301ffc9a71461016257806306fdde0314610192578063081812fc146101b4578063095ea7b314610202575b600080fd5b34801561014557600080fd5b5061014f60085481565b6040519081526020015b60405180910390f35b34801561016e57600080fd5b5061018261017d366004611031565b610421565b6040519015158152602001610159565b34801561019e57600080fd5b506101a7610473565b6040516101599190611079565b3480156101c057600080fd5b506101ea6101cf3660046110ac565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610159565b34801561020e57600080fd5b5061022261021d3660046110da565b610501565b005b34801561023057600080fd5b5061022261023f366004611106565b6105e8565b34801561025057600080fd5b5061022261025f366004611147565b6107af565b34801561027057600080fd5b5061022261027f366004611106565b610830565b34801561029057600080fd5b506101ea61029f3660046110ac565b610900565b3480156102b057600080fd5b506101a7610957565b3480156102c557600080fd5b5061014f6102d4366004611147565b610964565b3480156102e557600080fd5b506102226109c7565b61014f6102fc366004611147565b6109db565b34801561030d57600080fd5b506006546001600160a01b03166101ea565b34801561032b57600080fd5b5061014f61271081565b34801561034157600080fd5b506101a7610a4a565b34801561035657600080fd5b50610222610365366004611164565b610a57565b34801561037657600080fd5b506102226103853660046111a2565b610ac3565b34801561039657600080fd5b5061014f67011c37937e08000081565b3480156103b257600080fd5b506101a76103c13660046110ac565b610b88565b3480156103d257600080fd5b506101826103e1366004611241565b600560209081526000928352604080842090915290825290205460ff1681565b34801561040d57600080fd5b5061022261041c366004611147565b610c18565b60006301ffc9a760e01b6001600160e01b03198316148061045257506380ac58cd60e01b6001600160e01b03198316145b8061046d5750635b5e139f60e01b6001600160e01b03198316145b92915050565b600080546104809061126f565b80601f01602080910402602001604051908101604052809291908181526020018280546104ac9061126f565b80156104f95780601f106104ce576101008083540402835291602001916104f9565b820191906000526020600020905b8154815290600101906020018083116104dc57829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b03163381148061054a57506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b61058c5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000818152600260205260409020546001600160a01b0384811691161461063e5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610583565b6001600160a01b0382166106885760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610583565b336001600160a01b03841614806106c257506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b806106e357506000818152600460205260409020546001600160a01b031633145b6107205760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610583565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6107b7610c56565b60405147906000906001600160a01b0384169083908381818185875af1925050503d8060008114610804576040519150601f19603f3d011682016040523d82523d6000602084013e610809565b606091505b505090508061082b5760405163d23a9e8960e01b815260040160405180910390fd5b505050565b61083b8383836105e8565b6001600160a01b0382163b15806108e45750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af11580156108b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d891906112a9565b6001600160e01b031916145b61082b5760405162461bcd60e51b8152600401610583906112c6565b6000818152600260205260409020546001600160a01b0316806109525760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b6044820152606401610583565b919050565b600780546104809061126f565b60006001600160a01b0382166109ab5760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b6044820152606401610583565b506001600160a01b031660009081526003602052604090205490565b6109cf610c56565b6109d96000610c83565b565b600067011c37937e0800003414610a05576040516310f0c8f160e11b815260040160405180910390fd5b6000600860008154610a16906112f0565b91829055509050612710811115610a4057604051632cdb04a160e21b815260040160405180910390fd5b61046d8382610cd5565b600180546104809061126f565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610ace8585856105e8565b6001600160a01b0384163b1580610b655750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a0290610b169033908a90899089908990600401611317565b6020604051808303816000875af1158015610b35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5991906112a9565b6001600160e01b031916145b610b815760405162461bcd60e51b8152600401610583906112c6565b5050505050565b60606000610b9583610900565b6001600160a01b031603610bbc5760405163d872946b60e01b815260040160405180910390fd5b600060078054610bcb9061126f565b905011610be7576040518060200160405280600081525061046d565b6007610bf283610da5565b604051602001610c03929190611387565b60405160208183030381529060405292915050565b610c20610c56565b6001600160a01b038116610c4a57604051631e4fbdf760e01b815260006004820152602401610583565b610c5381610c83565b50565b6006546001600160a01b031633146109d95760405163118cdaa760e01b8152336004820152602401610583565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610cdf8282610e38565b6001600160a01b0382163b1580610d855750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a4016020604051808303816000875af1158015610d55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7991906112a9565b6001600160e01b031916145b610da15760405162461bcd60e51b8152600401610583906112c6565b5050565b60606000610db283610f43565b600101905060008167ffffffffffffffff811115610dd257610dd2611431565b6040519080825280601f01601f191660200182016040528015610dfc576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610e0657509392505050565b6001600160a01b038216610e825760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610583565b6000818152600260205260409020546001600160a01b031615610ed85760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b6044820152606401610583565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610f825772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610fae576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610fcc57662386f26fc10000830492506010015b6305f5e1008310610fe4576305f5e100830492506008015b6127108310610ff857612710830492506004015b6064831061100a576064830492506002015b600a831061046d5760010192915050565b6001600160e01b031981168114610c5357600080fd5b60006020828403121561104357600080fd5b813561104e8161101b565b9392505050565b60005b83811015611070578181015183820152602001611058565b50506000910152565b6020815260008251806020840152611098816040850160208701611055565b601f01601f19169190910160400192915050565b6000602082840312156110be57600080fd5b5035919050565b6001600160a01b0381168114610c5357600080fd5b600080604083850312156110ed57600080fd5b82356110f8816110c5565b946020939093013593505050565b60008060006060848603121561111b57600080fd5b8335611126816110c5565b92506020840135611136816110c5565b929592945050506040919091013590565b60006020828403121561115957600080fd5b813561104e816110c5565b6000806040838503121561117757600080fd5b8235611182816110c5565b91506020830135801515811461119757600080fd5b809150509250929050565b6000806000806000608086880312156111ba57600080fd5b85356111c5816110c5565b945060208601356111d5816110c5565b935060408601359250606086013567ffffffffffffffff808211156111f957600080fd5b818801915088601f83011261120d57600080fd5b81358181111561121c57600080fd5b89602082850101111561122e57600080fd5b9699959850939650602001949392505050565b6000806040838503121561125457600080fd5b823561125f816110c5565b91506020830135611197816110c5565b600181811c9082168061128357607f821691505b6020821081036112a357634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156112bb57600080fd5b815161104e8161101b565b60208082526010908201526f155394d0519157d49150d2541251539560821b604082015260600190565b60006001820161131057634e487b7160e01b600052601160045260246000fd5b5060010190565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b6000815161137d818560208601611055565b9290920192915050565b600080845481600182811c9150808316806113a357607f831692505b602080841082036113c257634e487b7160e01b86526022600452602486fd5b8180156113d657600181146113eb57611418565b60ff1986168952841515850289019650611418565b60008b81526020902060005b868110156114105781548b8201529085019083016113f7565b505084890196505b505050505050611428818561136b565b95945050505050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220fc74434df8dcbe457df681b364fec40e794b3fa153c2919265bf45c1b6718f2d64736f6c63430008140033",
    "sourceMap": "371:1454:21:-:0;;;609:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;750:10;726:5;733:7;2220:4:19;:12;726:5:21;2220:4:19;:12;:::i;:::-;-1:-1:-1;2242:6:19;:16;2251:7;2242:6;:16;:::i;:::-;;2154:111;;1269:32:14;1288:12;1269:18;;;:32;;:::i;:::-;-1:-1:-1;772:7:21::2;:18;782:8:::0;772:7;:18:::2;:::i;:::-;;609:188:::0;;;371:1454;;2808:187:14;2900:6;;;-1:-1:-1;;;;;2916:17:14;;;-1:-1:-1;;;;;;2916:17:14;;;;;;;2948:40;;2900:6;;;2916:17;2900:6;;2948:40;;2881:16;;2948:40;2871:124;2808:187;:::o;14:127:22:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:22;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:22;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:22:o;991:766::-;1109:6;1117;1125;1178:2;1166:9;1157:7;1153:23;1149:32;1146:52;;;1194:1;1191;1184:12;1146:52;1221:16;;-1:-1:-1;;;;;1286:14:22;;;1283:34;;;1313:1;1310;1303:12;1283:34;1336:61;1389:7;1380:6;1369:9;1365:22;1336:61;:::i;:::-;1326:71;;1443:2;1432:9;1428:18;1422:25;1406:41;;1472:2;1462:8;1459:16;1456:36;;;1488:1;1485;1478:12;1456:36;1511:63;1566:7;1555:8;1544:9;1540:24;1511:63;:::i;:::-;1501:73;;1620:2;1609:9;1605:18;1599:25;1583:41;;1649:2;1639:8;1636:16;1633:36;;;1665:1;1662;1655:12;1633:36;;1688:63;1743:7;1732:8;1721:9;1717:24;1688:63;:::i;:::-;1678:73;;;991:766;;;;;:::o;1762:380::-;1841:1;1837:12;;;;1884;;;1905:61;;1959:4;1951:6;1947:17;1937:27;;1905:61;2012:2;2004:6;2001:14;1981:18;1978:38;1975:161;;2058:10;2053:3;2049:20;2046:1;2039:31;2093:4;2090:1;2083:15;2121:4;2118:1;2111:15;1975:161;;1762:380;;;:::o;2273:545::-;2375:2;2370:3;2367:11;2364:448;;;2411:1;2436:5;2432:2;2425:17;2481:4;2477:2;2467:19;2551:2;2539:10;2535:19;2532:1;2528:27;2522:4;2518:38;2587:4;2575:10;2572:20;2569:47;;;-1:-1:-1;2610:4:22;2569:47;2665:2;2660:3;2656:12;2653:1;2649:20;2643:4;2639:31;2629:41;;2720:82;2738:2;2731:5;2728:13;2720:82;;;2783:17;;;2764:1;2753:13;2720:82;;;2724:3;;;2364:448;2273:545;;;:::o;2994:1352::-;3114:10;;-1:-1:-1;;;;;3136:30:22;;3133:56;;;3169:18;;:::i;:::-;3198:97;3288:6;3248:38;3280:4;3274:11;3248:38;:::i;:::-;3242:4;3198:97;:::i;:::-;3350:4;;3414:2;3403:14;;3431:1;3426:663;;;;4133:1;4150:6;4147:89;;;-1:-1:-1;4202:19:22;;;4196:26;4147:89;-1:-1:-1;;2951:1:22;2947:11;;;2943:24;2939:29;2929:40;2975:1;2971:11;;;2926:57;4249:81;;3396:944;;3426:663;2220:1;2213:14;;;2257:4;2244:18;;-1:-1:-1;;3462:20:22;;;3580:236;3594:7;3591:1;3588:14;3580:236;;;3683:19;;;3677:26;3662:42;;3775:27;;;;3743:1;3731:14;;;;3610:19;;3580:236;;;3584:3;3844:6;3835:7;3832:19;3829:201;;;3905:19;;;3899:26;-1:-1:-1;;3988:1:22;3984:14;;;4000:3;3980:24;3976:37;3972:42;3957:58;3942:74;;3829:201;-1:-1:-1;;;;;4076:1:22;4060:14;;;4056:22;4043:36;;-1:-1:-1;2994:1352:22:o;:::-;371:1454:21;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101345760003560e01c8063715018a6116100ab578063a22cb4651161006f578063a22cb4651461034a578063b88d4fde1461036a578063c002d23d1461038a578063c87b56dd146103a6578063e985e9c5146103c6578063f2fde38b1461040157600080fd5b8063715018a6146102d9578063755edd17146102ee5780638da5cb5b14610301578063902d55a51461031f57806395d89b411461033557600080fd5b806323b872dd116100fd57806323b872dd1461022457806331b3eb941461024457806342842e0e146102645780636352211e146102845780636c0360eb146102a457806370a08231146102b957600080fd5b80629a9b7b1461013957806301ffc9a71461016257806306fdde0314610192578063081812fc146101b4578063095ea7b314610202575b600080fd5b34801561014557600080fd5b5061014f60085481565b6040519081526020015b60405180910390f35b34801561016e57600080fd5b5061018261017d366004611031565b610421565b6040519015158152602001610159565b34801561019e57600080fd5b506101a7610473565b6040516101599190611079565b3480156101c057600080fd5b506101ea6101cf3660046110ac565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610159565b34801561020e57600080fd5b5061022261021d3660046110da565b610501565b005b34801561023057600080fd5b5061022261023f366004611106565b6105e8565b34801561025057600080fd5b5061022261025f366004611147565b6107af565b34801561027057600080fd5b5061022261027f366004611106565b610830565b34801561029057600080fd5b506101ea61029f3660046110ac565b610900565b3480156102b057600080fd5b506101a7610957565b3480156102c557600080fd5b5061014f6102d4366004611147565b610964565b3480156102e557600080fd5b506102226109c7565b61014f6102fc366004611147565b6109db565b34801561030d57600080fd5b506006546001600160a01b03166101ea565b34801561032b57600080fd5b5061014f61271081565b34801561034157600080fd5b506101a7610a4a565b34801561035657600080fd5b50610222610365366004611164565b610a57565b34801561037657600080fd5b506102226103853660046111a2565b610ac3565b34801561039657600080fd5b5061014f67011c37937e08000081565b3480156103b257600080fd5b506101a76103c13660046110ac565b610b88565b3480156103d257600080fd5b506101826103e1366004611241565b600560209081526000928352604080842090915290825290205460ff1681565b34801561040d57600080fd5b5061022261041c366004611147565b610c18565b60006301ffc9a760e01b6001600160e01b03198316148061045257506380ac58cd60e01b6001600160e01b03198316145b8061046d5750635b5e139f60e01b6001600160e01b03198316145b92915050565b600080546104809061126f565b80601f01602080910402602001604051908101604052809291908181526020018280546104ac9061126f565b80156104f95780601f106104ce576101008083540402835291602001916104f9565b820191906000526020600020905b8154815290600101906020018083116104dc57829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b03163381148061054a57506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b61058c5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000818152600260205260409020546001600160a01b0384811691161461063e5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610583565b6001600160a01b0382166106885760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610583565b336001600160a01b03841614806106c257506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b806106e357506000818152600460205260409020546001600160a01b031633145b6107205760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610583565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6107b7610c56565b60405147906000906001600160a01b0384169083908381818185875af1925050503d8060008114610804576040519150601f19603f3d011682016040523d82523d6000602084013e610809565b606091505b505090508061082b5760405163d23a9e8960e01b815260040160405180910390fd5b505050565b61083b8383836105e8565b6001600160a01b0382163b15806108e45750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af11580156108b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d891906112a9565b6001600160e01b031916145b61082b5760405162461bcd60e51b8152600401610583906112c6565b6000818152600260205260409020546001600160a01b0316806109525760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b6044820152606401610583565b919050565b600780546104809061126f565b60006001600160a01b0382166109ab5760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b6044820152606401610583565b506001600160a01b031660009081526003602052604090205490565b6109cf610c56565b6109d96000610c83565b565b600067011c37937e0800003414610a05576040516310f0c8f160e11b815260040160405180910390fd5b6000600860008154610a16906112f0565b91829055509050612710811115610a4057604051632cdb04a160e21b815260040160405180910390fd5b61046d8382610cd5565b600180546104809061126f565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610ace8585856105e8565b6001600160a01b0384163b1580610b655750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a0290610b169033908a90899089908990600401611317565b6020604051808303816000875af1158015610b35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5991906112a9565b6001600160e01b031916145b610b815760405162461bcd60e51b8152600401610583906112c6565b5050505050565b60606000610b9583610900565b6001600160a01b031603610bbc5760405163d872946b60e01b815260040160405180910390fd5b600060078054610bcb9061126f565b905011610be7576040518060200160405280600081525061046d565b6007610bf283610da5565b604051602001610c03929190611387565b60405160208183030381529060405292915050565b610c20610c56565b6001600160a01b038116610c4a57604051631e4fbdf760e01b815260006004820152602401610583565b610c5381610c83565b50565b6006546001600160a01b031633146109d95760405163118cdaa760e01b8152336004820152602401610583565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610cdf8282610e38565b6001600160a01b0382163b1580610d855750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a4016020604051808303816000875af1158015610d55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7991906112a9565b6001600160e01b031916145b610da15760405162461bcd60e51b8152600401610583906112c6565b5050565b60606000610db283610f43565b600101905060008167ffffffffffffffff811115610dd257610dd2611431565b6040519080825280601f01601f191660200182016040528015610dfc576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610e0657509392505050565b6001600160a01b038216610e825760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610583565b6000818152600260205260409020546001600160a01b031615610ed85760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b6044820152606401610583565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610f825772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610fae576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610fcc57662386f26fc10000830492506010015b6305f5e1008310610fe4576305f5e100830492506008015b6127108310610ff857612710830492506004015b6064831061100a576064830492506002015b600a831061046d5760010192915050565b6001600160e01b031981168114610c5357600080fd5b60006020828403121561104357600080fd5b813561104e8161101b565b9392505050565b60005b83811015611070578181015183820152602001611058565b50506000910152565b6020815260008251806020840152611098816040850160208701611055565b601f01601f19169190910160400192915050565b6000602082840312156110be57600080fd5b5035919050565b6001600160a01b0381168114610c5357600080fd5b600080604083850312156110ed57600080fd5b82356110f8816110c5565b946020939093013593505050565b60008060006060848603121561111b57600080fd5b8335611126816110c5565b92506020840135611136816110c5565b929592945050506040919091013590565b60006020828403121561115957600080fd5b813561104e816110c5565b6000806040838503121561117757600080fd5b8235611182816110c5565b91506020830135801515811461119757600080fd5b809150509250929050565b6000806000806000608086880312156111ba57600080fd5b85356111c5816110c5565b945060208601356111d5816110c5565b935060408601359250606086013567ffffffffffffffff808211156111f957600080fd5b818801915088601f83011261120d57600080fd5b81358181111561121c57600080fd5b89602082850101111561122e57600080fd5b9699959850939650602001949392505050565b6000806040838503121561125457600080fd5b823561125f816110c5565b91506020830135611197816110c5565b600181811c9082168061128357607f821691505b6020821081036112a357634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156112bb57600080fd5b815161104e8161101b565b60208082526010908201526f155394d0519157d49150d2541251539560821b604082015260600190565b60006001820161131057634e487b7160e01b600052601160045260246000fd5b5060010190565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b6000815161137d818560208601611055565b9290920192915050565b600080845481600182811c9150808316806113a357607f831692505b602080841082036113c257634e487b7160e01b86526022600452602486fd5b8180156113d657600181146113eb57611418565b60ff1986168952841515850289019650611418565b60008b81526020902060005b868110156114105781548b8201529085019083016113f7565b505084890196505b505050505050611428818561136b565b95945050505050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220fc74434df8dcbe457df681b364fec40e794b3fa153c2919265bf45c1b6718f2d64736f6c63430008140033",
    "sourceMap": "371:1454:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;469:29;;;;;;;;;;;;;;;;;;;160:25:22;;;148:2;133:18;469:29:21;;;;;;;;4714:335:19;;;;;;;;;;-1:-1:-1;4714:335:19;;;;;:::i;:::-;;:::i;:::-;;;747:14:22;;740:22;722:41;;710:2;695:18;4714:335:19;582:187:22;899:18:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1844:46::-;;;;;;;;;;-1:-1:-1;1844:46:19;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1844:46:19;;;;;;-1:-1:-1;;;;;1779:32:22;;;1761:51;;1749:2;1734:18;1844:46:19;1615:203:22;2453:282:19;;;;;;;;;;-1:-1:-1;2453:282:19;;;;;:::i;:::-;;:::i;:::-;;2950:741;;;;;;;;;;-1:-1:-1;2950:741:19;;;;;:::i;:::-;;:::i;1561:262:21:-;;;;;;;;;;-1:-1:-1;1561:262:21;;;;;:::i;:::-;;:::i;3697:396:19:-;;;;;;;;;;-1:-1:-1;3697:396:19;;;;;:::i;:::-;;:::i;1327:149::-;;;;;;;;;;-1:-1:-1;1327:149:19;;;;;:::i;:::-;;:::i;442:21:21:-;;;;;;;;;;;;;:::i;1482:168:19:-;;;;;;;;;;-1:-1:-1;1482:168:19;;;;;:::i;:::-;;:::i;2189:101:14:-;;;;;;;;;;;;;:::i;803:362:21:-;;;;;;:::i;:::-;;:::i;1534:85:14:-;;;;;;;;;;-1:-1:-1;1606:6:14;;-1:-1:-1;;;;;1606:6:14;1534:85;;504:45:21;;;;;;;;;;;;543:6;504:45;;924:20:19;;;;;;;;;;;;;:::i;2741:203::-;;;;;;;;;;-1:-1:-1;2741:203:19;;;;;:::i;:::-;;:::i;4099:427::-;;;;;;;;;;-1:-1:-1;4099:427:19;;;;;:::i;:::-;;:::i;555:47:21:-;;;;;;;;;;;;592:10;555:47;;1171:384;;;;;;;;;;-1:-1:-1;1171:384:21;;;;;:::i;:::-;;:::i;1897:68:19:-;;;;;;;;;;-1:-1:-1;1897:68:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;2439:215:14;;;;;;;;;;-1:-1:-1;2439:215:14;;;;;:::i;:::-;;:::i;4714:335:19:-;4790:4;-1:-1:-1;;;;;;;;;4825:25:19;;;;:100;;-1:-1:-1;;;;;;;;;;4900:25:19;;;4825:100;:175;;;-1:-1:-1;;;;;;;;;;4975:25:19;;;4825:175;4806:194;4714:335;-1:-1:-1;;4714:335:19:o;899:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2453:282::-;2524:13;2540:12;;;:8;:12;;;;;;-1:-1:-1;;;;;2540:12:19;2571:10;:19;;;:58;;-1:-1:-1;;;;;;2594:23:19;;;;;;:16;:23;;;;;;;;2618:10;2594:35;;;;;;;;;;2571:58;2563:85;;;;-1:-1:-1;;;2563:85:19;;5594:2:22;2563:85:19;;;5576:21:22;5633:2;5613:18;;;5606:30;-1:-1:-1;;;5652:18:22;;;5645:44;5706:18;;2563:85:19;;;;;;;;;2659:15;;;;:11;:15;;;;;;:25;;-1:-1:-1;;;;;;2659:25:19;-1:-1:-1;;;;;2659:25:19;;;;;;;;;2700:28;;2659:15;;2700:28;;;;;;;2514:221;2453:282;;:::o;2950:741::-;3081:12;;;;:8;:12;;;;;;-1:-1:-1;;;;;3073:20:19;;;3081:12;;3073:20;3065:43;;;;-1:-1:-1;;;3065:43:19;;5937:2:22;3065:43:19;;;5919:21:22;5976:2;5956:18;;;5949:30;-1:-1:-1;;;5995:18:22;;;5988:40;6045:18;;3065:43:19;5735:334:22;3065:43:19;-1:-1:-1;;;;;3127:16:19;;3119:46;;;;-1:-1:-1;;;3119:46:19;;6276:2:22;3119:46:19;;;6258:21:22;6315:2;6295:18;;;6288:30;-1:-1:-1;;;6334:18:22;;;6327:47;6391:18;;3119:46:19;6074:341:22;3119:46:19;3197:10;-1:-1:-1;;;;;3197:18:19;;;;:56;;-1:-1:-1;;;;;;3219:22:19;;;;;;:16;:22;;;;;;;;3242:10;3219:34;;;;;;;;;;3197:56;:89;;;-1:-1:-1;3271:15:19;;;;:11;:15;;;;;;-1:-1:-1;;;;;3271:15:19;3257:10;:29;3197:89;3176:150;;;;-1:-1:-1;;;3176:150:19;;5594:2:22;3176:150:19;;;5576:21:22;5633:2;5613:18;;;5606:30;-1:-1:-1;;;5652:18:22;;;5645:44;5706:18;;3176:150:19;5392:338:22;3176:150:19;-1:-1:-1;;;;;3526:16:19;;;;;;;:10;:16;;;;;;;;:18;;-1:-1:-1;;3526:18:19;;;3559:14;;;;;;;;;:16;;3526:18;3559:16;;;3596:12;;;:8;:12;;;;;:17;;-1:-1:-1;;;;;;3596:17:19;;;;;;;;3631:11;:15;;;;;;3624:22;;;;;;;;3662;;3605:2;;3559:14;3526:16;3662:22;;;2950:741;;;:::o;1561:262:21:-;1427:13:14;:11;:13::i;:::-;1710:30:21::1;::::0;1657:21:::1;::::0;1639:15:::1;::::0;-1:-1:-1;;;;;1710:10:21;::::1;::::0;1657:21;;1639:15;1710:30;1639:15;1710:30;1657:21;1710:10;:30:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:52;;;1755:10;1750:67;;1788:18;;-1:-1:-1::0;;;1788:18:21::1;;;;;;;;;;;1750:67;1629:194;;1561:262:::0;:::o;3697:396:19:-;3816:26;3829:4;3835:2;3839;3816:12;:26::i;:::-;-1:-1:-1;;;;;3874:14:19;;;:19;;:170;;-1:-1:-1;3913:66:19;;-1:-1:-1;;;3913:66:19;;;3954:10;3913:66;;;6935:34:22;-1:-1:-1;;;;;7005:15:22;;;6985:18;;;6978:43;7037:18;;;7030:34;;;7100:3;7080:18;;;7073:31;-1:-1:-1;7120:19:22;;;7113:30;3999:45:19;;3913:40;;;;3999:45;;7160:19:22;;3913:66:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;3913:131:19;;3874:170;3853:233;;;;-1:-1:-1;;;3853:233:19;;;;;;;:::i;1327:149::-;1385:13;1427:12;;;:8;:12;;;;;;-1:-1:-1;;;;;1427:12:19;;1410:59;;;;-1:-1:-1;;;1410:59:19;;7991:2:22;1410:59:19;;;7973:21:22;8030:2;8010:18;;;8003:30;-1:-1:-1;;;8049:18:22;;;8042:40;8099:18;;1410:59:19;7789:334:22;1410:59:19;1327:149;;;:::o;442:21:21:-;;;;;;;:::i;1482:168:19:-;1545:7;-1:-1:-1;;;;;1572:19:19;;1564:44;;;;-1:-1:-1;;;1564:44:19;;8330:2:22;1564:44:19;;;8312:21:22;8369:2;8349:18;;;8342:30;-1:-1:-1;;;8388:18:22;;;8381:42;8440:18;;1564:44:19;8128:336:22;1564:44:19;-1:-1:-1;;;;;;1626:17:19;;;;;:10;:17;;;;;;;1482:168::o;2189:101:14:-;1427:13;:11;:13::i;:::-;2253:30:::1;2280:1;2253:18;:30::i;:::-;2189:101::o:0;803:362:21:-;862:7;592:10;885:9;:23;881:79;;931:18;;-1:-1:-1;;;931:18:21;;;;;;;;;;;881:79;969:18;992:14;;990:16;;;;;:::i;:::-;;;;;-1:-1:-1;990:16:21;-1:-1:-1;543:6:21;1020:25;;1016:74;;;1068:11;;-1:-1:-1;;;1068:11:21;;;;;;;;;;;1016:74;1099:32;1109:9;1120:10;1099:9;:32::i;924:20:19:-;;;;;;;:::i;2741:203::-;2843:10;2826:28;;;;:16;:28;;;;;;;;-1:-1:-1;;;;;2826:38:19;;;;;;;;;;;;:49;;-1:-1:-1;;2826:49:19;;;;;;;;;;2891:46;;722:41:22;;;2826:38:19;;2843:10;2891:46;;695:18:22;2891:46:19;;;;;;;2741:203;;:::o;4099:427::-;4247:26;4260:4;4266:2;4270;4247:12;:26::i;:::-;-1:-1:-1;;;;;4305:14:19;;;:19;;:172;;-1:-1:-1;4344:68:19;;-1:-1:-1;;;4344:68:19;;;4432:45;-1:-1:-1;;;;;4344:40:19;;;4432:45;;4344:68;;4385:10;;4397:4;;4403:2;;4407:4;;;;4344:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;4344:133:19;;4305:172;4284:235;;;;-1:-1:-1;;;4284:235:19;;;;;;;:::i;:::-;4099:427;;;;;:::o;1171:384:21:-;1284:13;1345:1;1317:16;1325:7;1317;:16::i;:::-;-1:-1:-1;;;;;1317:30:21;;1313:89;;1370:21;;-1:-1:-1;;;1370:21:21;;;;;;;;;;;1313:89;1454:1;1436:7;1430:21;;;;;:::i;:::-;;;:25;:118;;;;;;;;;;;;;;;;;1498:7;1507:18;:7;:16;:18::i;:::-;1481:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1411:137;1171:384;-1:-1:-1;;1171:384:21:o;2439:215:14:-;1427:13;:11;:13::i;:::-;-1:-1:-1;;;;;2523:22:14;::::1;2519:91;;2568:31;::::0;-1:-1:-1;;;2568:31:14;;2596:1:::1;2568:31;::::0;::::1;1761:51:22::0;1734:18;;2568:31:14::1;1615:203:22::0;2519:91:14::1;2619:28;2638:8;2619:18;:28::i;:::-;2439:215:::0;:::o;1692:162::-;1606:6;;-1:-1:-1;;;;;1606:6:14;720:10:15;1751:23:14;1747:101;;1797:40;;-1:-1:-1;;;1797:40:14;;720:10:15;1797:40:14;;;1761:51:22;1734:18;;1797:40:14;1615:203:22;2808:187:14;2900:6;;;-1:-1:-1;;;;;2916:17:14;;;-1:-1:-1;;;;;;2916:17:14;;;;;;;2948:40;;2900:6;;;2916:17;2900:6;;2948:40;;2881:16;;2948:40;2871:124;2808:187;:::o;6185:340:19:-;6255:13;6261:2;6265;6255:5;:13::i;:::-;-1:-1:-1;;;;;6300:14:19;;;:19;;:176;;-1:-1:-1;6339:72:19;;-1:-1:-1;;;6339:72:19;;;6380:10;6339:72;;;6935:34:22;6400:1:19;6985:18:22;;;6978:43;;;7037:18;;;7030:34;;;7100:3;7080:18;;;7073:31;7120:19;;;7113:30;6431:45:19;-1:-1:-1;;;;;6339:40:19;;;6431:45;;7160:19:22;;6339:72:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;6339:137:19;;6300:176;6279:239;;;;-1:-1:-1;;;6279:239:19;;;;;;;:::i;:::-;6185:340;;:::o;636:696:16:-;692:13;741:14;758:17;769:5;758:10;:17::i;:::-;778:1;758:21;741:38;;793:20;827:6;816:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;816:18:16;-1:-1:-1;793:41:16;-1:-1:-1;954:28:16;;;970:2;954:28;1009:280;-1:-1:-1;;1040:5:16;-1:-1:-1;;;1174:2:16;1163:14;;1158:30;1040:5;1145:44;1233:2;1224:11;;;-1:-1:-1;1253:21:16;1009:280;1253:21;-1:-1:-1;1309:6:16;636:696;-1:-1:-1;;;636:696:16:o;5243:371:19:-;-1:-1:-1;;;;;5317:16:19;;5309:46;;;;-1:-1:-1;;;5309:46:19;;6276:2:22;5309:46:19;;;6258:21:22;6315:2;6295:18;;;6288:30;-1:-1:-1;;;6334:18:22;;;6327:47;6391:18;;5309:46:19;6074:341:22;5309:46:19;5398:1;5374:12;;;:8;:12;;;;;;-1:-1:-1;;;;;5374:12:19;:26;5366:53;;;;-1:-1:-1;;;5366:53:19;;11376:2:22;5366:53:19;;;11358:21:22;11415:2;11395:18;;;11388:30;-1:-1:-1;;;11434:18:22;;;11427:44;11488:18;;5366:53:19;11174:338:22;5366:53:19;-1:-1:-1;;;;;5509:14:19;;;;;;:10;:14;;;;;;;;:16;;;;;;5546:12;;;:8;:12;;;;;;:17;;-1:-1:-1;;;;;;5546:17:19;;;;;5579:28;5555:2;;5509:14;;5579:28;;5509:14;;5579:28;5243:371;;:::o;12232:916:17:-;12285:7;;-1:-1:-1;;;12360:17:17;;12356:103;;-1:-1:-1;;;12397:17:17;;;-1:-1:-1;12442:2:17;12432:12;12356:103;12485:8;12476:5;:17;12472:103;;12522:8;12513:17;;;-1:-1:-1;12558:2:17;12548:12;12472:103;12601:8;12592:5;:17;12588:103;;12638:8;12629:17;;;-1:-1:-1;12674:2:17;12664:12;12588:103;12717:7;12708:5;:16;12704:100;;12753:7;12744:16;;;-1:-1:-1;12788:1:17;12778:11;12704:100;12830:7;12821:5;:16;12817:100;;12866:7;12857:16;;;-1:-1:-1;12901:1:17;12891:11;12817:100;12943:7;12934:5;:16;12930:100;;12979:7;12970:16;;;-1:-1:-1;13014:1:17;13004:11;12930:100;13056:7;13047:5;:16;13043:66;;13093:1;13083:11;13135:6;12232:916;-1:-1:-1;;12232:916:17:o;196:131:22:-;-1:-1:-1;;;;;;270:32:22;;260:43;;250:71;;317:1;314;307:12;332:245;390:6;443:2;431:9;422:7;418:23;414:32;411:52;;;459:1;456;449:12;411:52;498:9;485:23;517:30;541:5;517:30;:::i;:::-;566:5;332:245;-1:-1:-1;;;332:245:22:o;774:250::-;859:1;869:113;883:6;880:1;877:13;869:113;;;959:11;;;953:18;940:11;;;933:39;905:2;898:10;869:113;;;-1:-1:-1;;1016:1:22;998:16;;991:27;774:250::o;1029:396::-;1178:2;1167:9;1160:21;1141:4;1210:6;1204:13;1253:6;1248:2;1237:9;1233:18;1226:34;1269:79;1341:6;1336:2;1325:9;1321:18;1316:2;1308:6;1304:15;1269:79;:::i;:::-;1409:2;1388:15;-1:-1:-1;;1384:29:22;1369:45;;;;1416:2;1365:54;;1029:396;-1:-1:-1;;1029:396:22:o;1430:180::-;1489:6;1542:2;1530:9;1521:7;1517:23;1513:32;1510:52;;;1558:1;1555;1548:12;1510:52;-1:-1:-1;1581:23:22;;1430:180;-1:-1:-1;1430:180:22:o;1823:131::-;-1:-1:-1;;;;;1898:31:22;;1888:42;;1878:70;;1944:1;1941;1934:12;1959:315;2027:6;2035;2088:2;2076:9;2067:7;2063:23;2059:32;2056:52;;;2104:1;2101;2094:12;2056:52;2143:9;2130:23;2162:31;2187:5;2162:31;:::i;:::-;2212:5;2264:2;2249:18;;;;2236:32;;-1:-1:-1;;;1959:315:22:o;2279:456::-;2356:6;2364;2372;2425:2;2413:9;2404:7;2400:23;2396:32;2393:52;;;2441:1;2438;2431:12;2393:52;2480:9;2467:23;2499:31;2524:5;2499:31;:::i;:::-;2549:5;-1:-1:-1;2606:2:22;2591:18;;2578:32;2619:33;2578:32;2619:33;:::i;:::-;2279:456;;2671:7;;-1:-1:-1;;;2725:2:22;2710:18;;;;2697:32;;2279:456::o;2740:255::-;2807:6;2860:2;2848:9;2839:7;2835:23;2831:32;2828:52;;;2876:1;2873;2866:12;2828:52;2915:9;2902:23;2934:31;2959:5;2934:31;:::i;3252:416::-;3317:6;3325;3378:2;3366:9;3357:7;3353:23;3349:32;3346:52;;;3394:1;3391;3384:12;3346:52;3433:9;3420:23;3452:31;3477:5;3452:31;:::i;:::-;3502:5;-1:-1:-1;3559:2:22;3544:18;;3531:32;3601:15;;3594:23;3582:36;;3572:64;;3632:1;3629;3622:12;3572:64;3655:7;3645:17;;;3252:416;;;;;:::o;3673:936::-;3770:6;3778;3786;3794;3802;3855:3;3843:9;3834:7;3830:23;3826:33;3823:53;;;3872:1;3869;3862:12;3823:53;3911:9;3898:23;3930:31;3955:5;3930:31;:::i;:::-;3980:5;-1:-1:-1;4037:2:22;4022:18;;4009:32;4050:33;4009:32;4050:33;:::i;:::-;4102:7;-1:-1:-1;4156:2:22;4141:18;;4128:32;;-1:-1:-1;4211:2:22;4196:18;;4183:32;4234:18;4264:14;;;4261:34;;;4291:1;4288;4281:12;4261:34;4329:6;4318:9;4314:22;4304:32;;4374:7;4367:4;4363:2;4359:13;4355:27;4345:55;;4396:1;4393;4386:12;4345:55;4436:2;4423:16;4462:2;4454:6;4451:14;4448:34;;;4478:1;4475;4468:12;4448:34;4523:7;4518:2;4509:6;4505:2;4501:15;4497:24;4494:37;4491:57;;;4544:1;4541;4534:12;4491:57;3673:936;;;;-1:-1:-1;3673:936:22;;-1:-1:-1;4575:2:22;4567:11;;4597:6;3673:936;-1:-1:-1;;;3673:936:22:o;4614:388::-;4682:6;4690;4743:2;4731:9;4722:7;4718:23;4714:32;4711:52;;;4759:1;4756;4749:12;4711:52;4798:9;4785:23;4817:31;4842:5;4817:31;:::i;:::-;4867:5;-1:-1:-1;4924:2:22;4909:18;;4896:32;4937:33;4896:32;4937:33;:::i;5007:380::-;5086:1;5082:12;;;;5129;;;5150:61;;5204:4;5196:6;5192:17;5182:27;;5150:61;5257:2;5249:6;5246:14;5226:18;5223:38;5220:161;;5303:10;5298:3;5294:20;5291:1;5284:31;5338:4;5335:1;5328:15;5366:4;5363:1;5356:15;5220:161;;5007:380;;;:::o;7190:249::-;7259:6;7312:2;7300:9;7291:7;7287:23;7283:32;7280:52;;;7328:1;7325;7318:12;7280:52;7360:9;7354:16;7379:30;7403:5;7379:30;:::i;7444:340::-;7646:2;7628:21;;;7685:2;7665:18;;;7658:30;-1:-1:-1;;;7719:2:22;7704:18;;7697:46;7775:2;7760:18;;7444:340::o;8469:232::-;8508:3;8529:17;;;8526:140;;8588:10;8583:3;8579:20;8576:1;8569:31;8623:4;8620:1;8613:15;8651:4;8648:1;8641:15;8526:140;-1:-1:-1;8693:1:22;8682:13;;8469:232::o;8706:662::-;-1:-1:-1;;;;;8985:15:22;;;8967:34;;9037:15;;9032:2;9017:18;;9010:43;9084:2;9069:18;;9062:34;;;9132:3;9127:2;9112:18;;9105:31;;;9152:19;;9145:35;;;8910:4;9173:6;9223;8947:3;9202:19;;9189:49;9288:1;9282:3;9273:6;9262:9;9258:22;9254:32;9247:43;9358:3;9351:2;9347:7;9342:2;9334:6;9330:15;9326:29;9315:9;9311:45;9307:55;9299:63;;8706:662;;;;;;;;:::o;9499:198::-;9541:3;9579:5;9573:12;9594:65;9652:6;9647:3;9640:4;9633:5;9629:16;9594:65;:::i;:::-;9675:16;;;;;9499:198;-1:-1:-1;;9499:198:22:o;9702:1203::-;9878:3;9907:1;9940:6;9934:13;9970:3;9992:1;10020:9;10016:2;10012:18;10002:28;;10080:2;10069:9;10065:18;10102;10092:61;;10146:4;10138:6;10134:17;10124:27;;10092:61;10172:2;10220;10212:6;10209:14;10189:18;10186:38;10183:165;;-1:-1:-1;;;10247:33:22;;10303:4;10300:1;10293:15;10333:4;10254:3;10321:17;10183:165;10364:18;10391:133;;;;10538:1;10533:320;;;;10357:496;;10391:133;-1:-1:-1;;10424:24:22;;10412:37;;10497:14;;10490:22;10478:35;;10469:45;;;-1:-1:-1;10391:133:22;;10533:320;9446:1;9439:14;;;9483:4;9470:18;;10628:1;10642:165;10656:6;10653:1;10650:13;10642:165;;;10734:14;;10721:11;;;10714:35;10777:16;;;;10671:10;;10642:165;;;10646:3;;10836:6;10831:3;10827:16;10820:23;;10357:496;;;;;;;10869:30;10895:3;10887:6;10869:30;:::i;:::-;10862:37;9702:1203;-1:-1:-1;;;;;9702:1203:22:o;10910:127::-;10971:10;10966:3;10962:20;10959:1;10952:31;11002:4;10999:1;10992:15;11026:4;11023:1;11016:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "MINT_PRICE()": "c002d23d",
    "TOTAL_SUPPLY()": "902d55a5",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "baseURI()": "6c0360eb",
    "currentTokenId()": "009a9b7b",
    "getApproved(uint256)": "081812fc",
    "isApprovedForAll(address,address)": "e985e9c5",
    "mintTo(address)": "755edd17",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "renounceOwnership()": "715018a6",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "withdrawPayments(address)": "31b3eb94"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"MaxSupply\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintPriceNotPaid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonExistentTokenURI\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawTransfer\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MINT_PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOTAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"mintTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"withdrawPayments\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MyNFT.sol\":\"MyNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@solmate/=lib/solmate/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0x35b70c1f89b9bd6291182fe550499c6ac42a410c1eb19f0668f87147f339b0a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7129da5d478d04c7b3ad121f0f84310b12a6def55ba906caa3775db676aceaa\",\"dweb:/ipfs/QmPpVwyjxnjFRS4CsHMr3STwBohAxLUwxgtu3gG93m7ybB\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x639f180f9bedd48998c68f1bf4f8d01b37a4573bc496acb04a55308c6de0045c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ff2313c66e4e14d167aae923b38509ec68dcaa281d2314f45b527139d33d4af\",\"dweb:/ipfs/QmU7aik96EmKeG8feBbQZ8BufngtYB6guGTkZoX5umP73i\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x31f34a3baec77c087d2bdbc5c277f169e505b905aeb43cfcea1734175140f621\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5a3bc8093b31b685ef879e8ffaaab614594cb6f98ddac4f18c411f7bbf99d0d\",\"dweb:/ipfs/QmSFfA9pH3xo8hnWKCFKTwGi8kz68YXuAwyLXsYe6KjC3Z\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xcacb834dd2ea10ad700ab7b66ccbab148275f8588ad57064993714b2e5575b85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22d55118e00d54b2e7dd94e740a3ed21b69c2bbe52668967796db1b4c3756512\",\"dweb:/ipfs/QmednwKBPV1XRTa74xDSdMkNZL4PvMD2bvNfskoLsB2Gfk\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x63a4fc7046bc052edeec923181f2f886681e1e0b34c4f23ce84425acfe80a1fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cee5cb5fa0dc7d47c463f900b5fcd44abe84f6bce23433898af1221598a3a9b\",\"dweb:/ipfs/Qmdjp7Pf6RuGgAnSxUKd9CvniN8gUG6wLH1cdvhg5L9w4z\"]},\"lib/solmate/src/tokens/ERC721.sol\":{\"keccak256\":\"0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403\",\"dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK\"]},\"src/MyNFT.sol\":{\"keccak256\":\"0x93edf349180cdcd41f2f001bcb7ac5b4c0d94641317e29197abde3f64e2e7afe\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://502db5efff64b37b17a55babc77798aa0b0914d5929dcf6729a24025d8aac615\",\"dweb:/ipfs/QmbC32wuPS9PC7BFgQcZ1shqQKnP5JDs8o7CcGJ9CJp35n\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_baseURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MaxSupply"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintPriceNotPaid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NonExistentTokenURI"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WithdrawTransfer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MINT_PRICE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TOTAL_SUPPLY",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "baseURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "currentTokenId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "mintTo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "payee",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawPayments"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@solmate/=lib/solmate/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/MyNFT.sol": "MyNFT"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0x35b70c1f89b9bd6291182fe550499c6ac42a410c1eb19f0668f87147f339b0a0",
        "urls": [
          "bzz-raw://d7129da5d478d04c7b3ad121f0f84310b12a6def55ba906caa3775db676aceaa",
          "dweb:/ipfs/QmPpVwyjxnjFRS4CsHMr3STwBohAxLUwxgtu3gG93m7ybB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x639f180f9bedd48998c68f1bf4f8d01b37a4573bc496acb04a55308c6de0045c",
        "urls": [
          "bzz-raw://4ff2313c66e4e14d167aae923b38509ec68dcaa281d2314f45b527139d33d4af",
          "dweb:/ipfs/QmU7aik96EmKeG8feBbQZ8BufngtYB6guGTkZoX5umP73i"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x31f34a3baec77c087d2bdbc5c277f169e505b905aeb43cfcea1734175140f621",
        "urls": [
          "bzz-raw://b5a3bc8093b31b685ef879e8ffaaab614594cb6f98ddac4f18c411f7bbf99d0d",
          "dweb:/ipfs/QmSFfA9pH3xo8hnWKCFKTwGi8kz68YXuAwyLXsYe6KjC3Z"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xcacb834dd2ea10ad700ab7b66ccbab148275f8588ad57064993714b2e5575b85",
        "urls": [
          "bzz-raw://22d55118e00d54b2e7dd94e740a3ed21b69c2bbe52668967796db1b4c3756512",
          "dweb:/ipfs/QmednwKBPV1XRTa74xDSdMkNZL4PvMD2bvNfskoLsB2Gfk"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0x63a4fc7046bc052edeec923181f2f886681e1e0b34c4f23ce84425acfe80a1fb",
        "urls": [
          "bzz-raw://9cee5cb5fa0dc7d47c463f900b5fcd44abe84f6bce23433898af1221598a3a9b",
          "dweb:/ipfs/Qmdjp7Pf6RuGgAnSxUKd9CvniN8gUG6wLH1cdvhg5L9w4z"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/tokens/ERC721.sol": {
        "keccak256": "0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d",
        "urls": [
          "bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403",
          "dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/MyNFT.sol": {
        "keccak256": "0x93edf349180cdcd41f2f001bcb7ac5b4c0d94641317e29197abde3f64e2e7afe",
        "urls": [
          "bzz-raw://502db5efff64b37b17a55babc77798aa0b0914d5929dcf6729a24025d8aac615",
          "dweb:/ipfs/QmbC32wuPS9PC7BFgQcZ1shqQKnP5JDs8o7CcGJ9CJp35n"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/MyNFT.sol",
    "id": 40921,
    "exportedSymbols": {
      "ERC721": [
        40662
      ],
      "MaxSupply": [
        40765
      ],
      "MintPriceNotPaid": [
        40763
      ],
      "MyNFT": [
        40920
      ],
      "NonExistentTokenURI": [
        40767
      ],
      "Ownable": [
        38699
      ],
      "Strings": [
        38976
      ],
      "WithdrawTransfer": [
        40769
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1786:21",
    "nodes": [
      {
        "id": 40755,
        "nodeType": "PragmaDirective",
        "src": "39:25:21",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 40757,
        "nodeType": "ImportDirective",
        "src": "66:49:21",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC721.sol",
        "file": "solmate/tokens/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 40921,
        "sourceUnit": 40683,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40756,
              "name": "ERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40662,
              "src": "74:6:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 40759,
        "nodeType": "ImportDirective",
        "src": "116:75:21",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "file": "openzeppelin-contracts/contracts/utils/Strings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 40921,
        "sourceUnit": 38977,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40758,
              "name": "Strings",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38976,
              "src": "124:7:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 40761,
        "nodeType": "ImportDirective",
        "src": "192:76:21",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "openzeppelin-contracts/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 40921,
        "sourceUnit": 38700,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40760,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38699,
              "src": "200:7:21",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 40763,
        "nodeType": "ErrorDefinition",
        "src": "270:25:21",
        "nodes": [],
        "errorSelector": "21e191e2",
        "name": "MintPriceNotPaid",
        "nameLocation": "276:16:21",
        "parameters": {
          "id": 40762,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "292:2:21"
        }
      },
      {
        "id": 40765,
        "nodeType": "ErrorDefinition",
        "src": "296:18:21",
        "nodes": [],
        "errorSelector": "b36c1284",
        "name": "MaxSupply",
        "nameLocation": "302:9:21",
        "parameters": {
          "id": 40764,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "311:2:21"
        }
      },
      {
        "id": 40767,
        "nodeType": "ErrorDefinition",
        "src": "315:28:21",
        "nodes": [],
        "errorSelector": "d872946b",
        "name": "NonExistentTokenURI",
        "nameLocation": "321:19:21",
        "parameters": {
          "id": 40766,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "340:2:21"
        }
      },
      {
        "id": 40769,
        "nodeType": "ErrorDefinition",
        "src": "344:25:21",
        "nodes": [],
        "errorSelector": "d23a9e89",
        "name": "WithdrawTransfer",
        "nameLocation": "350:16:21",
        "parameters": {
          "id": 40768,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "366:2:21"
        }
      },
      {
        "id": 40920,
        "nodeType": "ContractDefinition",
        "src": "371:1454:21",
        "nodes": [
          {
            "id": 40776,
            "nodeType": "UsingForDirective",
            "src": "411:26:21",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 40774,
              "name": "Strings",
              "nameLocations": [
                "417:7:21"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38976,
              "src": "417:7:21"
            },
            "typeName": {
              "id": 40775,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "429:7:21",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 40778,
            "nodeType": "VariableDeclaration",
            "src": "442:21:21",
            "nodes": [],
            "constant": false,
            "functionSelector": "6c0360eb",
            "mutability": "mutable",
            "name": "baseURI",
            "nameLocation": "456:7:21",
            "scope": 40920,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 40777,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "442:6:21",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 40780,
            "nodeType": "VariableDeclaration",
            "src": "469:29:21",
            "nodes": [],
            "constant": false,
            "functionSelector": "009a9b7b",
            "mutability": "mutable",
            "name": "currentTokenId",
            "nameLocation": "484:14:21",
            "scope": 40920,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 40779,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "469:7:21",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 40783,
            "nodeType": "VariableDeclaration",
            "src": "504:45:21",
            "nodes": [],
            "constant": true,
            "functionSelector": "902d55a5",
            "mutability": "constant",
            "name": "TOTAL_SUPPLY",
            "nameLocation": "528:12:21",
            "scope": 40920,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 40781,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "504:7:21",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31305f303030",
              "id": 40782,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "543:6:21",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10_000"
            },
            "visibility": "public"
          },
          {
            "id": 40786,
            "nodeType": "VariableDeclaration",
            "src": "555:47:21",
            "nodes": [],
            "constant": true,
            "functionSelector": "c002d23d",
            "mutability": "constant",
            "name": "MINT_PRICE",
            "nameLocation": "579:10:21",
            "scope": 40920,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 40784,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "555:7:21",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e3038",
              "id": 40785,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "592:10:21",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_80000000000000000_by_1",
                "typeString": "int_const 80000000000000000"
              },
              "value": "0.08"
            },
            "visibility": "public"
          },
          {
            "id": 40808,
            "nodeType": "FunctionDefinition",
            "src": "609:188:21",
            "nodes": [],
            "body": {
              "id": 40807,
              "nodeType": "Block",
              "src": "762:35:21",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 40805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40803,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40778,
                      "src": "772:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 40804,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40792,
                      "src": "782:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "772:18:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 40806,
                  "nodeType": "ExpressionStatement",
                  "src": "772:18:21"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 40795,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40788,
                    "src": "726:5:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 40796,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40790,
                    "src": "733:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 40797,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 40794,
                  "name": "ERC721",
                  "nameLocations": [
                    "719:6:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40662,
                  "src": "719:6:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "719:22:21"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 40799,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "750:3:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 40800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "754:6:21",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "750:10:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 40801,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 40798,
                  "name": "Ownable",
                  "nameLocations": [
                    "742:7:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38699,
                  "src": "742:7:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "742:19:21"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 40793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40788,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "644:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 40808,
                  "src": "630:19:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 40787,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "630:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40790,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "673:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 40808,
                  "src": "659:21:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 40789,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40792,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "704:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 40808,
                  "src": "690:22:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 40791,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "690:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "620:98:21"
            },
            "returnParameters": {
              "id": 40802,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "762:0:21"
            },
            "scope": 40920,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 40845,
            "nodeType": "FunctionDefinition",
            "src": "803:362:21",
            "nodes": [],
            "body": {
              "id": 40844,
              "nodeType": "Block",
              "src": "871:294:21",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 40818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 40815,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "885:3:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 40816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "889:5:21",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "885:9:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 40817,
                      "name": "MINT_PRICE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40786,
                      "src": "898:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "885:23:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 40823,
                  "nodeType": "IfStatement",
                  "src": "881:79:21",
                  "trueBody": {
                    "id": 40822,
                    "nodeType": "Block",
                    "src": "910:50:21",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 40819,
                            "name": "MintPriceNotPaid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40763,
                            "src": "931:16:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 40820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "931:18:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 40821,
                        "nodeType": "RevertStatement",
                        "src": "924:25:21"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    40825
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40825,
                      "mutability": "mutable",
                      "name": "newTokenId",
                      "nameLocation": "977:10:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 40844,
                      "src": "969:18:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 40824,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "969:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40828,
                  "initialValue": {
                    "id": 40827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": true,
                    "src": "990:16:21",
                    "subExpression": {
                      "id": 40826,
                      "name": "currentTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40780,
                      "src": "992:14:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "969:37:21"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 40831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 40829,
                      "name": "newTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40825,
                      "src": "1020:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 40830,
                      "name": "TOTAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40783,
                      "src": "1033:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1020:25:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 40836,
                  "nodeType": "IfStatement",
                  "src": "1016:74:21",
                  "trueBody": {
                    "id": 40835,
                    "nodeType": "Block",
                    "src": "1047:43:21",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 40832,
                            "name": "MaxSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40765,
                            "src": "1068:9:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 40833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1068:11:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 40834,
                        "nodeType": "RevertStatement",
                        "src": "1061:18:21"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40838,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40810,
                        "src": "1109:9:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 40839,
                        "name": "newTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40825,
                        "src": "1120:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 40837,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        40619,
                        40661
                      ],
                      "referencedDeclaration": 40619,
                      "src": "1099:9:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 40840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1099:32:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40841,
                  "nodeType": "ExpressionStatement",
                  "src": "1099:32:21"
                },
                {
                  "expression": {
                    "id": 40842,
                    "name": "newTokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40825,
                    "src": "1148:10:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 40814,
                  "id": 40843,
                  "nodeType": "Return",
                  "src": "1141:17:21"
                }
              ]
            },
            "functionSelector": "755edd17",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintTo",
            "nameLocation": "812:6:21",
            "parameters": {
              "id": 40811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40810,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "827:9:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 40845,
                  "src": "819:17:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "819:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "818:19:21"
            },
            "returnParameters": {
              "id": 40814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40813,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 40845,
                  "src": "862:7:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40812,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "862:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "861:9:21"
            },
            "scope": 40920,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 40887,
            "nodeType": "FunctionDefinition",
            "src": "1171:384:21",
            "nodes": [],
            "body": {
              "id": 40886,
              "nodeType": "Block",
              "src": "1303:252:21",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 40860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 40854,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40847,
                          "src": "1325:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 40853,
                        "name": "ownerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40187,
                        "src": "1317:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) view returns (address)"
                        }
                      },
                      "id": 40855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1317:16:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 40858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1345:1:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 40857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1337:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 40856,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1337:7:21",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 40859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1337:10:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1317:30:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 40865,
                  "nodeType": "IfStatement",
                  "src": "1313:89:21",
                  "trueBody": {
                    "id": 40864,
                    "nodeType": "Block",
                    "src": "1349:53:21",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 40861,
                            "name": "NonExistentTokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40767,
                            "src": "1370:19:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 40862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1370:21:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 40863,
                        "nodeType": "RevertStatement",
                        "src": "1363:28:21"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 40872,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 40868,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40778,
                              "src": "1436:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "id": 40867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1430:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 40866,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1430:5:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 40869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1430:14:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes storage pointer"
                          }
                        },
                        "id": 40870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1445:6:21",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1430:21:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 40871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1454:1:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1430:25:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 40883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1546:2:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 40884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1430:118:21",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 40877,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40778,
                              "src": "1498:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 40878,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40847,
                                  "src": "1507:7:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 40879,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1515:8:21",
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 38789,
                                "src": "1507:16:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 40880,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1507:18:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 40875,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "1481:3:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 40876,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1485:12:21",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "1481:16:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 40881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1481:45:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 40874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1474:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 40873,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1474:6:21",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 40882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1474:53:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 40852,
                  "id": 40885,
                  "nodeType": "Return",
                  "src": "1411:137:21"
                }
              ]
            },
            "baseFunctions": [
              40156
            ],
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "1180:8:21",
            "overrides": {
              "id": 40849,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1258:8:21"
            },
            "parameters": {
              "id": 40848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40847,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1197:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 40887,
                  "src": "1189:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40846,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1189:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1188:17:21"
            },
            "returnParameters": {
              "id": 40852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40851,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 40887,
                  "src": "1284:13:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 40850,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1284:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1283:15:21"
            },
            "scope": 40920,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 40919,
            "nodeType": "FunctionDefinition",
            "src": "1561:262:21",
            "nodes": [],
            "body": {
              "id": 40918,
              "nodeType": "Block",
              "src": "1629:194:21",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    40895
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40895,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "1647:7:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 40918,
                      "src": "1639:15:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 40894,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1639:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40901,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 40898,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "1665:4:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MyNFT_$40920",
                            "typeString": "contract MyNFT"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MyNFT_$40920",
                            "typeString": "contract MyNFT"
                          }
                        ],
                        "id": 40897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1657:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 40896,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1657:7:21",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 40899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1657:13:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 40900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1671:7:21",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "1657:21:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1639:39:21"
                },
                {
                  "assignments": [
                    40903,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40903,
                      "mutability": "mutable",
                      "name": "transferTx",
                      "nameLocation": "1694:10:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 40918,
                      "src": "1689:15:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 40902,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1689:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 40910,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 40908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1737:2:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 40904,
                          "name": "payee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40889,
                          "src": "1710:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 40905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1716:4:21",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "1710:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 40907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 40906,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40895,
                          "src": "1728:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1710:26:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 40909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1710:30:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1688:52:21"
                },
                {
                  "condition": {
                    "id": 40912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1754:11:21",
                    "subExpression": {
                      "id": 40911,
                      "name": "transferTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40903,
                      "src": "1755:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 40917,
                  "nodeType": "IfStatement",
                  "src": "1750:67:21",
                  "trueBody": {
                    "id": 40916,
                    "nodeType": "Block",
                    "src": "1767:50:21",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 40913,
                            "name": "WithdrawTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40769,
                            "src": "1788:16:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 40914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1788:18:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 40915,
                        "nodeType": "RevertStatement",
                        "src": "1781:25:21"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "31b3eb94",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 40892,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40891,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1619:9:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38610,
                  "src": "1619:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "1619:9:21"
              }
            ],
            "name": "withdrawPayments",
            "nameLocation": "1570:16:21",
            "parameters": {
              "id": 40890,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40889,
                  "mutability": "mutable",
                  "name": "payee",
                  "nameLocation": "1603:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 40919,
                  "src": "1587:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 40888,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1587:15:21",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1586:23:21"
            },
            "returnParameters": {
              "id": 40893,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1629:0:21"
            },
            "scope": 40920,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 40770,
              "name": "ERC721",
              "nameLocations": [
                "389:6:21"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40662,
              "src": "389:6:21"
            },
            "id": 40771,
            "nodeType": "InheritanceSpecifier",
            "src": "389:6:21"
          },
          {
            "baseName": {
              "id": 40772,
              "name": "Ownable",
              "nameLocations": [
                "397:7:21"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38699,
              "src": "397:7:21"
            },
            "id": 40773,
            "nodeType": "InheritanceSpecifier",
            "src": "397:7:21"
          }
        ],
        "canonicalName": "MyNFT",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          40920,
          38699,
          38721,
          40662
        ],
        "name": "MyNFT",
        "nameLocation": "380:5:21",
        "scope": 40921,
        "usedErrors": [
          38580,
          38585,
          40763,
          40765,
          40767,
          40769
        ],
        "usedEvents": [
          38591,
          40129,
          40137,
          40145
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 21
}